/* linux/drivers/media/video/samsung/s5k3ba.h
 *
 * Header file for Samsung S5K3BA CMOS Image Sensor driver
 *
 * Jinsung Yang, Copyright (c) 2009 Samsung Electronics
 * 	http://www.samsungsemi.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef _S5K3BA_H_
#define _S5K3BA_H_

typedef struct s3c_fimc_i2c_value {
	u8 subaddr;
	u8 value;
} s5k3ba_t;

/* init */
s5k3ba_t s5k3ba_init_reg[] =
{
	//[[CAMIF_POWER_UP]]
	{0xfc, 0x02},
	{0x52, 0x86},		// PLL M
	//{0x52, 0x80}, 		// PLL M
	//{0x52, 0x64}, 		// PLL M
	{0xfc, 0x01},
	{0x04, 0x03}, 	// Original	ARM Clock Divider
	//{0x04, 0x02},
	{0xfc, 0x02},
	//{0x50, 0x5B}, //Original
	{0x50, 0x59}, 	// Input Clock 25Mhz
	{0xfc, 0x02},
	{0x30, 0x84},  	// Analog offset
	{0x3d, 0x26},  	// ADLC enable
	{0x4f, 0x7a},   // I/O driving strength 7mA
	//s45c0 	// CDS S1S timing for HN Á¦°Å <- CC
	{0xfc, 0x03},
	//{0x00, 0x02},
	//s2d03  //02
	{0xfc, 0x07},
	{0x58, 0x10},
	{0x59, 0x00},
	{0x5a, 0x00},
	{0x5b, 0x6c},
	{0xfc, 0xf0},
	{0x00, 0x40},
	{0xfc, 0x01},
	//{0x02, 0x02},     // YCbCr Order
	//sfc05
	//s112e 	// Cb coef.
	{0xfc, 0x05},  	// YCbCr Coef
	{0x11, 0x2e},
	//s113d //2e	// Blue saturation
	{0x75, 0x05},  	// scaler input vsync start
	{0x8c, 0xb1},  	// CLIP V size L
	{0x8d, 0x04},  	// CLIP V size H
	{0x77, 0xb1},  	// scaler input vsync height
	{0xfc, 0x03},  	// UXGA Size
	{0x12, 0x05},
	{0x26, 0xb1},
	{0x27, 0x04},
	{0x14, 0xb1},
	///////////////////////////////////////////
	{0xfc, 0x02},
	{0x4a, 0xc1}, 	// SC type
	{0x37, 0x16}, 	// SC type
	{0x47, 0xc4},     // r-ramp  by chin
	//////////////////////////////////////////

	//////////////////////////////////////////
	// Must Mirro Function
	{0xfc, 0x07},
	{0x69, 0x00},  	// Mirror XOR
	{0xfc, 0x00},
	{0x23, 0x91},  	// Disable wcp/wrd
	// End Mirror
	//////////////////////////////////////////

	/////////////////////////////////////////
	// Special Effect Cr Cb setting
	{0xfc, 0x07},
	{0x30, 0x20},
	{0x31, 0xc0},
	{0x32, 0xc0},
	{0x33, 0x40},
	// End
	/////////////////////////////////////////

	// AWB Window Area
	//sfc01
	//sc401
	//sc54e
	//sc76e

	// color matrix
	{0xfc, 0x01},
	{0x51, 0x06},		//06
	{0x52, 0x68},		//68  	//68
	{0x53, 0xFE},		//FE
	{0x54, 0x23},		//23
	{0x55, 0xFF},		//FF
	{0x56, 0x88},		//88
	     		//
	{0x57, 0xFE},		//FE
	{0x58, 0x00},		//00
	{0x59, 0x07},		//07
	{0x5A, 0x1F},		////1F 	//1F 	//1F
	{0x5B, 0xFE},		//FE
	{0x5C, 0xF3},		//F3
	     		//
	{0x5D, 0xFF},		//FF
	{0x5E, 0x00},		//00
	{0x5F, 0xFC},		//FC
	{0x60, 0x6F},		//df 	//6F  	//6F
	{0x61, 0x08},		//08
	{0x62, 0x9F},		//bf 	//9F  	//9F

	//Edge
	{0xfc, 0x05},
	{0x2c, 0x0f},   //0a 	//10 	//14   // positive gain
	{0x30, 0x0c},   //10 	//14	// negative edge gain
	{0x34, 0x12},   ///////  // APTCLP
	{0x35, 0x06},   //0c 	//0a   // APTSC
	{0x36, 0x0b},   // ENHANCE
	{0x3f, 0x00},   // NON-LIN
	{0x45, 0x30},    // EGREF
	{0x47, 0x60},    // LLREF
	{0x48, 0x08},    // by chin
	{0x49, 0x39},    // CSSEL  EGSEL  CS_DLY by
	{0x47, 0x00},
	{0x40, 0x41}, 	// Y delay
	//Gamma 2
	{0xfc, 0x01},
	{0x6F, 0x08},      // R
	{0x70, 0x10},
	{0x71, 0x40},
	{0x72, 0xd0},
	{0x73, 0x00},
	{0x74, 0xa8},
	{0x75, 0x08},
	{0x76, 0x68},
	{0x77, 0xba},
	{0x78, 0x6a},
	{0x79, 0x08},
	{0x7A, 0x4a},
	{0x7B, 0x6c},
	{0x7C, 0x8a},
	{0x7D, 0xff},
	{0x7E, 0x9e},
	{0x7F, 0xb0},
	{0x80, 0xc0},
	{0x81, 0xd0},
	{0x82, 0xff},
	{0x83, 0xde},
	{0x84, 0xe6},
	{0x85, 0xea},
	{0x86, 0xff},
	{0x87, 0x08},        //G
	{0x88, 0x40},
	{0x89, 0x78},
	{0x8A, 0xf0},
	{0x8B, 0x00},
	{0x8C, 0xb0},
	{0x8D, 0x10},
	{0x8E, 0x68},
	{0x8F, 0xb6},
	{0x90, 0x6a},
	{0x91, 0x04},
	{0x92, 0x30},
	{0x93, 0x53},
	{0x94, 0x74},
	{0x95, 0xff},
	{0x96, 0x8d},
	{0x97, 0xa2},
	{0x98, 0xb6},
	{0x99, 0xc8},
	{0x9A, 0xff},
	{0x9B, 0xd6},
	{0x9C, 0xe0},
	{0x9D, 0xea},
	{0x9E, 0xff},
	{0x9F, 0x08},       //B
	{0xA0, 0x40},
	{0xA1, 0x78},
	{0xA2, 0xf0},
	{0xA3, 0x00},
	{0xA4, 0xb0},
	{0xA5, 0x10},
	{0xA6, 0x68},
	{0xA7, 0xba},
	{0xA8, 0x6a},
	{0xA9, 0x08},
	{0xAA, 0x3a},
	{0xAB, 0x60},
	{0xAC, 0x80}, 	
	{0xAD, 0xff},
	{0xAE, 0x95}, 	
	{0xAF, 0xa8}, 	
	{0xB0, 0xba},
	{0xB1, 0xcc},
	{0xB2, 0xff},
	{0xB3, 0xd8},
	{0xB4, 0xe2},
	{0xB5, 0xea},
	{0xB6, 0xff},
	{0xfc, 0x00},  // Hue  Gain
	{0x48, 0x44},
	{0x49, 0x60},
	{0x4a, 0x00},
	{0x4b, 0x18},
	{0x4c, 0x58},
	{0x4d, 0x70},  //60
	{0x4e, 0x00},
	{0x4f, 0x00},
	{0x50, 0x44},
	{0x51, 0x60},
	{0x52, 0x00},
	{0x53, 0x18},
	{0x54, 0x58},
	{0x55, 0x70},   //60
	{0x56, 0x00},
	{0x57, 0x00},
	{0x58, 0x44},
	{0x59, 0x60},
	{0x5a, 0x00},
	{0x5b, 0x18},
	{0x5c, 0x50},
	{0x5d, 0x48},
	{0x5e, 0x08},
	{0x5f, 0x05},   //00
	//ISP_tuning
	{0xfc, 0x00},
	{0x01, 0x00},    // I2C hold mode off
	//s2222  // I2C master ctrl.
	//s2d5a  // frame AE start  50
	{0x3e, 0x10},    // Y_min    Y min level limit value of AWB ODM
	{0xfc, 0x01},
	{0x00, 0x00},  	// ISP BPR Off
	{0x0c, 0x02},  	// Full YC
	{0xc8, 0xe0}, 	//f0 		// AWB Y Max
	////////////////////////////////
	// 2005.07.17 cspyo set
	///////////////////////////////
	{0xfc, 0x00},
	{0x24, 0x45},   // zoom skip 5fps
	{0x6c, 0xb8}, 	//ba 	//d2 	//d8  // AE target
	{0x6d, 0x00},    //
	{0x78, 0x60},  	// AGC Max
	{0x79, 0xfb}, 	//fc  	// R gain
	{0x7a, 0x03}, 	// B gain
	{0x81, 0x00},  	// AWB G gain suppress disable
	{0x29, 0x04},   //     Y level
	{0x2a, 0x10}, 	//50  	// Y level
	{0x2b, 0x04},  	// color level H
	{0x2c, 0x00}, 	//20  	// color level L
	{0xfc, 0x07},
	{0x11, 0x00},  	// G offset
	{0x37, 0x00},  	// Flicker Add
	{0xfc, 0x00},
	{0x72, 0xa0},  	// Flicker for 32MHz
	{0x74, 0x08},  	// flicker 60Hz
	{0xfc, 0x05},
	{0x64, 0x02},  	// Darkslice R
	{0x65, 0xfe},  	// Darkslice G
	{0x66, 0xff},  	// Darkslice B
	////////////////////////////////////
	{0xfc, 0x00},
	{0x7e, 0xfc},
	//s7e8c  //NR GrGb off
	// [7]: BPR [6]:Noise Filter(1D/NR) [4]: GrGb Enable [3]:BPR Data Threshold
	// [2]: color suppress [1]: Y gain suppress [0]: Digital Clamp
	///////////////////////////////////
	////////////////////////////////////
	// GrGb Correction setting
	{0xfc, 0x01},
	{0x44, 0x0c},  	
	//s4400 	
	/// [4]: GrGb full [3]: GrGb On
	/// [2]: GrGb Rb On
	{0xfc, 0x0b},
	{0x21, 0x00},  	// Start AGC
	{0x22, 0x10},  	// AGCMIN
	{0x23, 0x50},  	// AGCMAX
	{0x24, 0x18},   //0e //12  	//17 	// G Th AGCMIN(23d)
	{0x25, 0x32},  	// G Th AGCMAX(50d)
	{0x26, 0x18},   //0e 	//12  	//17 	// RB Th AGCMIN
	{0x27, 0x32},  	// RB Th AGCMAX
	// GrGb Correction setting End
	///////////////////////////////////
	// BPR Setting
	{0xfc, 0x01},
	{0x3f, 0x00},  	// setting because S/W bug
	{0xfc, 0x0b},
	{0x0b, 0x00},  	// ISP BPR On Start
	{0x0c, 0x00},  	// Th13 AGC Min
	{0x0d, 0x40},  	//5a	// Th13 AGC Max
	{0x0e, 0x01}, 	//00  	// Th1 Max H for AGCMIN
	{0x0f, 0xff}, 	//c0  	// Th1 Max L for AGCMIN
	{0x10, 0x00},  	// Th1 Min H for AGCMAX
	{0x11, 0x10},  	//00	// Th1 Min L for AGCMAX
	{0x12, 0xff},  	// Th3 Max H for AGCMIN
	{0x13, 0xff},     // Th3 Max L for AGCMIN
	{0x14, 0xff},     // Th3 Min H for AGCMAX
	{0x15, 0xff},     // Th3 Min L for AGCMAX
	///////////////////////////////////////////
	// NR Setting
	{0xfc, 0x01},
	{0x4b, 0x01},  	// NR Enable
	//s4b00 	// NR Enable
	{0xfc, 0x0b},
	{0x28, 0x00},  	//NR Start AGC	
	{0x29, 0x00},  	// SIG Th AGCMIN H
	{0x2a, 0x0a}, 	//14  	// SIG Th AGCMIN L
	{0x2b, 0x00},  	// SIG Th AGCMAX H
	{0x2c, 0x0a}, 	//14  	// SIG Th AGCMAX L
	{0x2d, 0x00},  	// PRE Th AGCMIN H
	{0x2e, 0x70},   //50 	//64  	// PRE Th AGCMIN L(100d)
	{0x2f, 0x01},  	// PRE Th AGCMAX H(300d)
	{0x30, 0x2c},  	// PRE Th AGCMAX L
	{0x31, 0x00},  	// POST Th AGCMIN H
	{0x32, 0x70},   //50 	//64  	// POST Th AGCMIN L(100d)
	{0x33, 0x01},  	// POST Th AGCMAX H(300d)
	{0x34, 0x2c},  	// POST Th AGCMAX L
	// NR Setting End
	////////////////////////////////
	// Color suppress setting
	{0xfc, 0x0b},
	{0x08, 0x50},  	// C suppress AGC MIN
	{0x09, 0x04},  	// C suppress MIN H
	{0x0a, 0x00},  	// C suppress MIN L
	// C Suppress Setting End
	///////////////////////////////
	// 1D Y LPF Filter
	{0xfc, 0x01},
	//s05e0 	// Default s60
	{0x05, 0x60},  	// Default s60
	//[7]: Y LPF filter On [6]: Clap On
	{0xfc, 0x0b},
	{0x35, 0x00},  	// YLPF Start AGC
	{0x36, 0x50},  	// YLPF01 AGCMIN
	{0x37, 0x50},  	// YLPF01 AGCMAX
	{0x38, 0x00},  	// YLPF SIG01 Th AGCMINH
	{0x39, 0x00},  	// YLPF SIG01 Th AGCMINL
	{0x3a, 0x00},     // YLPF SIG01 Th AGCMAXH
	{0x3b, 0xa0},     // YLPF SIG01 Th AGCMAXH
	{0x3c, 0x50},  	// YLPF02 AGCMIN
	{0x3d, 0x50},     // YLPF02 AGCMAX
	{0x3e, 0x00},     // YLPF SIG02 Th AGCMINH
	{0x3f, 0x00},     // YLPF SIG02 Th AGCMINL
	{0x40, 0x00},     // YLPF SIG02 Th AGCMAXH
	{0x41, 0xa0},     // YLPF SIG02 Th AGCMAXH
	// Y LPF Filter setting End
	//------------------------------------------------------------------
	/// Set File
	/// - S5K3BAFB_CRF_June02+yihan_050707.xls generates
	/// - date : 2005-07-08
	///------------------------------------------------------------------
	/// Page : ISP Page 9
	{0xfc, 0x09},
	{0x00, 0x02},  	// shading on
	{0x01, 0x06},  	// size
	{0x02, 0x40},
	{0x03, 0x04},
	{0x04, 0xB0},
	{0x05, 0x03},  	// shading center R
	{0x06, 0x19},
	{0x07, 0x02},
	{0x08, 0x75},
	{0x09, 0x03},   // shading center R
	{0x0A, 0x1b},
	{0x0b, 0x02},
	{0x0c, 0x7a},
	{0x0d, 0x03},   // shading center R
	{0x0e, 0x09},
	{0x0f, 0x02},
	{0x10, 0x7d},
	{0x35, 0x00},  	// shading R
	{0x36, 0xff},
	{0x37, 0x01},
	{0x38, 0x06},
	{0x39, 0x01},
	{0x3A, 0x1d},
	{0x3B, 0x01},
	{0x3C, 0x44},
	{0x3D, 0x01},
	{0x3E, 0x5d},
	{0x3F, 0x01},
	{0x40, 0x7c},
	{0x41, 0x01},
	{0x42, 0x97},
	{0x43, 0x01},
	{0x44, 0xba},
	{0x45, 0x01},   // shading G
	{0x46, 0x01},
	{0x47, 0x01},
	{0x48, 0x08},
	{0x49, 0x01},
	{0x4A, 0x1d},
	{0x4B, 0x01},
	{0x4C, 0x40},
	{0x4D, 0x01},
	{0x4E, 0x58},
	{0x4F, 0x01},
	{0x50, 0x73},
	{0x51, 0x01},
	{0x52, 0x8a},
	{0x53, 0x01},
	{0x54, 0xa6},
	{0x55, 0x00},  	// shading B
	{0x56, 0xff},
	{0x57, 0x01},
	{0x58, 0x05},
	{0x59, 0x01},
	{0x5A, 0x1a},
	{0x5B, 0x01},
	{0x5C, 0x3c},
	{0x5D, 0x01},
	{0x5E, 0x52},
	{0x5F, 0x01},
	{0x60, 0x6e},
	{0x61, 0x01},
	{0x62, 0x8b},
	{0x63, 0x01},
	{0x64, 0xb3},
	// sub-sampling
	{0xfc, 0x03},
	//{0x2d, 0x01},  // UXGA YCrCb Order
	{0x2d, 0x06},  // UXGA YCrCb Order
	{0x12, 0x05},
	{0x26, 0xb1},
	{0x27, 0x04},
	{0x14, 0xb1},
	{0xfc, 0x04},
	{0x14, 0xb1},
	{0x72, 0x05},  	// H2 V1
	{0x74, 0xb1},
	{0xa2, 0x05},  	// H1 V2
	{0xa3, 0x02},
	{0xa4, 0x59},
	{0xa7, 0x59},
	{0xa8, 0x02},
	{0xae, 0x59},
	{0xaf, 0x02},
	{0xb6, 0x59},
	{0xb7, 0x02},
	{0xd2, 0x05},  	// H2 V2
	{0xd3, 0x02},
	{0xd4, 0x59},
	{0xd7, 0x59},
	{0xd8, 0x02},
	{0xde, 0x59},
	{0xdf, 0x02},
	{0xe6, 0x59},
	{0xe7, 0x02},
	{0xfc, 0x14},  	// H4  V1
	{0x05, 0x98},
	{0x0e, 0x02},
	{0x12, 0x05},
	{0x13, 0x04},
	{0x14, 0xb1},
	{0x17, 0xb0},
	{0x18, 0x04},
	{0x1e, 0xb0},
	{0x1f, 0x04},
	{0x26, 0xb1},
	{0x27, 0x04},
	{0x35, 0x98},  	// H4 V4
	{0x3e, 0x02},
	{0x42, 0x05},
	{0x43, 0x01},
	{0x44, 0x2d},
	{0x47, 0x2d},
	{0x48, 0x01},
	{0x4e, 0x2d},
	{0x4f, 0x01},
	{0x56, 0x2e},
	{0x57, 0x01},
	// AE Window Size control for sub-sampling
	{0xfc, 0x06},
	{0x12, 0x00},  	// H=2 V=1(800*1200)
	{0x13, 0x61},  	// AE H End
	{0x16, 0x00},  	// AE V End
	{0x17, 0x94},
	{0x22, 0x00},  	// H=1  V=2(1600*600)
	{0x23, 0xc5},  	// AE H End
	{0x26, 0x00},     // AE V End
	{0x27, 0x4b},
	{0x32, 0x00},  	// H=2  V=2(800*600)
	{0x33, 0x61},  	// AE H End
	{0x36, 0x00},     // AE V End
	{0x37, 0x48},
	{0x38, 0x00},  	// AWB Window Size
	{0x39, 0x0a},
	{0x3a, 0x00},
	{0x3b, 0x61},
	{0x3c, 0x00},
	{0x3d, 0x75},
	{0x3e, 0x00},
	{0x3f, 0x3e},
	{0x42, 0x00},  	// H=4  V=1(400*1200)
	{0x43, 0x2f},  	// AE H End
	{0x46, 0x00},     // AE V End
	{0x47, 0x97},
	{0x52, 0x00},  	// H=4  V=4(400*300)
	{0x53, 0x30},  	// AE H End
	{0x56, 0x00},     // AE V End
	{0x57, 0x26},
	// white point
	{0xfc, 0x00},
	{0x40, 0x78},		//7d  a
	{0x41, 0xe0},		//e2
	{0x42, 0x83},		//95  12
	{0x43, 0xc6},		//ba  c
	{0x44, 0xad},		//bc  f
	{0x45, 0x9d},		//99  4
	{0x34, 0x18},		//115
	{0x35, 0x14},		//02
	{0x36, 0x04},		//04
	{0x37, 0x12},		//04
	{0x38, 0x06},		//03
	{0x39, 0x1d},		//18 	//25
	{0x3a, 0x14},		//12 	//22 	//1f
	{0x3b, 0x2c},		//16 	//18 	//1a
	{0xfc, 0x20}, 	// AE window weight
	{0x60, 0x00},
	{0x61, 0x00},
	{0x62, 0x00},
	{0x63, 0x00},
	{0x64, 0x11},
	{0x65, 0x11},
	{0x66, 0x11},
	{0x67, 0x11},
	{0x68, 0x11},
	{0x69, 0x22},
	{0x6a, 0x22},
	{0x6b, 0x11},
	{0x6c, 0x11},
	{0x6d, 0x22},
	{0x6e, 0x22},
	{0x6f, 0x11},
	{0x70, 0x11},
	{0x71, 0x22},
	{0x72, 0x22},
	{0x73, 0x11},
	{0x74, 0x11},
	{0x75, 0x22},
	{0x76, 0x22},
	{0x77, 0x11},
	{0x78, 0x33},
	{0x79, 0x33},
	{0x7a, 0x33},
	{0x7b, 0x33},
	{0x7c, 0x33},
	{0x7d, 0x33},
	{0x7e, 0x33},
	{0x7f, 0x33},
	{0xfc, 0x01},
	{0x02, 0x02},
	{0xfc, 0x02},
	{0x30, 0x83},
	{0x44, 0x5b}, 	// clamp enable
	{0x55, 0x03},
	{0xfc, 0x00},
	{0x62, 0x02},
	{0xfc, 0x04},
	{0xee, 0x08},
	{0xfc, 0x03},
	{0x2e, 0x08},
	{0xfc, 0x02},
	{0x11, 0x11},
	{0xfc, 0x01},
	{0x4d, 0x08},		// RV con, Red pixel Ordering
	//{0x01, 0x00},		// PCLK
	{0x01, 0x01},		// Inversion PCLK
	{0xfc, 0x00},
	{0x02, 0x00},		// UXGA Size Out

	// for 800x600(SVGA)
	// Page 0
	{0xfc, 0x00},
	{0x02, 0x09},   // 800*600 sub-sampling
	// Page 9
	{0xfc, 0x09},   // 800*600 shading delta value
	{0x1D, 0xFF},
	{0x1E, 0xFF},
	{0x1F, 0xFF},
	{0x20, 0xFF},
	{0x21, 0xFF},
	{0x22, 0xFF},
	{0x23, 0xFF},
	{0x24, 0xFF},
	{0x25, 0xFF},
	{0x26, 0xFF},
	{0x27, 0xFF},
	{0x28, 0xFF},
	{0x29, 0xFF},
	{0x2A, 0xFF},
	{0x2B, 0xFF},
	{0x2C, 0xFF},
	{0x2D, 0xFF},
	{0x2E, 0xFF},
	{0x2F, 0xFF},
	{0x30, 0xFF},
	{0x31, 0xFF},
	{0x32, 0xFF},
	{0x33, 0xFF},
	{0x34, 0xFF},
	// Page 1
	{0xfc, 0x01},
	{0x02, 0x02},     // YCbCr Order
};

// For SVGA ( 800 x 600) on 3BA module
s5k3ba_t s5k3ba_vga_reg[] =
{
	/* Only for VGA Mode */
		{0xec,0x07},	//bpr by pyo
		{0x21,0x9c},
		{0x22,0x58},
		{0xec,0x00},
		{0x87,0x00},
		{0x86,0x48},	//bpr by pyo

		{0xec,0x02},
		{0x02,0x0d},  //9bit
		{0x1f,0x07},  //global gain

		{0xec,0x01},
		{0x21,0x40},
		{0x22,0x40},
		{0x23,0x00},
		{0x24,0x00},

		{0xec,0x00},
		{0x7b,0x00},
		{0x73,0x51},
		{0x02,0x31},
};

/* SXGA */
s5k3ba_t s5k3ba_sxga_reg[] =
{
	{0xec,0x07},
	{0x21,0x90},
	{0x22,0x60},
	{0xec,0x00},
	{0x87,0x00},
	{0x86,0x20},

	{0xec,0x02},
	{0x02,0x0f},
	{0x1f,0x0f},
		{0xec,0x01},
	{0x21,0x50},
	{0x22,0x50},
	{0x23,0x10},
	{0x24,0x10},
	{0xec,0x00},
	{0x7b,0xff},
	{0x73,0x00},
	{0x02,0x00},
};

#define S5K3BA_INIT_REGS	(sizeof(s5k3ba_init_reg) / sizeof(s5k3ba_init_reg[0]))
#define S5K3BA_VGA_REGS		(sizeof(s5k3ba_vga_reg) / sizeof(s5k3ba_vga_reg[0]))
#define S5K3BA_SXGA_REGS	(sizeof(s5k3ba_sxga_reg) / sizeof(s5k3ba_sxga_reg[0]))

#endif

